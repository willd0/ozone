  <div class="container">
    <div class="row justify-content-md-center">
        <div class="col-md-auto">
          <h2 align=center>Hello! Welcome to My Ozone!</h2>
        <h6 align=center>Move the marker to display the current ozone air quality for the selected location.</p>
          
        <div class="border border-5 border-dark" id='map' style='width: 800px; height: 450px;'></div>
       
        <script>
          mapboxgl.accessToken = access_token;

          navigator.geolocation.getCurrentPosition(successLocation, errorLocation, { enableHighAccuracy: true })

          function successLocation(position) {
            setupMap([position.coords.longitude, position.coords.latitude])
          }

          function errorLocation() {
            setupMap([-2.24, 53.48])
          }

          function setupMap(center) {
            const map = new mapboxgl.Map({
              container: 'map', // container ID
              style: 'mapbox://styles/mapbox/navigation-day-v1', // style URL
              center: center, // starting position [lng, lat]
              zoom: 2 // starting zoom
          })
            
            const nav = new mapboxgl.NavigationControl();
            map.addControl(nav);

            const marker = new mapboxgl.Marker({
              draggable: true,
              
            })
            .setLngLat(center)
            .addTo(map);

            var currentmarker = marker;
            var lLat = currentmarker.getLngLat();
            var c = map.getCenter();
            var aqiColor = "silver";
            fetch('http://api.openweathermap.org/data/2.5/air_pollution?lat=' + c.lat + '&lon=' + c.lng + '&appid=api_key')
              .then(response => {
                if(response.status === 400) {
                  aqiColor = "silver";
                  changeMarker(aqiColor, lLat);
                } else {
                return response.json();
                  }
                })
              .then(data => {
                var final_out = data.list[0].main.aqi;
                checkAQI(final_out, lLat);

              });

            marker.on('dragend', onDragEnd);
            
            function changeMarker(aqiColor, lngLat) {
              currentmarker.remove();
              const marker2 = new mapboxgl.Marker({
                      color: aqiColor,
                      draggable: true,
                      
                    })
                    .setLngLat(lngLat)
                    .addTo(map);
                    currentmarker = marker2;
                    marker2.on('dragend', onDragEnd);      
            }

            function checkAQI(final_output, lngLat) {
                  if (final_output == 1) {
                    aqiColor = "green";
                    changeMarker(aqiColor, lngLat);

                  } else if (final_output == 2) {
                    aqiColor = "yellow";
                    changeMarker(aqiColor, lngLat);
        
                  } else if (final_output == 3) {
                    aqiColor = "orange";
                    changeMarker(aqiColor, lngLat);
                    
                  } else if (final_output == 4) {
                    aqiColor = "red";
                    changeMarker(aqiColor, lngLat);
                    
                  } else if (final_output == 5) {
                    aqiColor = "purple";
                    changeMarker(aqiColor, lngLat);
                    
                  } else {
                    aqiColor = "silver";
                    changeMarker(aqiColor, lngLat);
                  }
            }
            
            function onDragEnd() {
              var lngLat = currentmarker.getLngLat();
              map.flyTo ({
                center: [
                  lngLat.lng,
                  lngLat.lat
                ],
                essential: false
              });
              fetch('http://api.openweathermap.org/data/2.5/air_pollution?lat=' + lngLat.lat + '&lon=' + lngLat.lng + '&appid=api_key')
                .then(response => {
                  if(response.status === 400) {
                    aqiColor = "silver";
                    changeMarker(aqiColor, lngLat);
                  } else {
                  return response.json();
                    }
                  })
                  .then(data => {
                  var final_output = data.list[0].main.aqi;
                  checkAQI(final_output, lngLat);

                })

            }
            
          }
        </script>
      </div>
<div class="col-md-auto">
<br/>
<br/>
<br/>
<br/>
<table class="table border border-5 border-dark">
  <thead class="table-dark">
    <tr>
      <th>Air Quality Index</th>
    </tr>
  </thead>

  <tbody>
      <tr class="green">
        <td>
         Good
        </td>
      </tr>
      <tr class="yellow">
        <td>
         Fair
        </td>
      </tr>
      <tr class="orange">
        <td>
         Moderate
        </td>
      </tr>
      <tr class="red">
        <td>
         Poor
        </td>
      </tr>
      <tr class="purple">
        <td>
         Very Poor
        </td>
      </tr>
      <tr class="silver">
        <td>
         No Data Available
        </td>
      </tr>
  </tbody>
</table>
</div>
</div>
</div>

        <br/>
      
    <br/>
